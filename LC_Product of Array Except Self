//https://leetcode.com/problems/product-of-array-except-self/
/*TIME LIMITED
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        vector<int> b;
        int n=nums.size();
        for(int i=0;i<n;i++){
            int product=1;
            for(int j=0;j<n;j++)
            {
                if(i==j)
                    continue;
                product*=nums[j];
            }
            b.push_back(product);
        }
        return b;
    }
};
*/
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n=nums.size();
        vector<int> output(n);
        output[0]=1;
        for(int i=1;i<n;i++){
            output[i]=output[i-1]*nums[i-1];
        }
        int post[n];
        post[n-1]=1;
        for(int i=n-2;i>=0;i--){
            post[i]=post[i+1]*nums[i+1];
            output[i]*=post[i];
        }
        return output;
    }
};
//将pre数组存入output数组+1；再将post数组乘入output
